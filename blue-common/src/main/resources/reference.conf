http {

  # the port the http server listens to
  port = 8080

  host = localhost

}

recaptcha {
  # no ReCaptcha key by default
  # the private key
  # private-key = "my super private key"
  # the public key (for clients)
  # public-key = "my awesome public key"
}

blue {

  # the base URL hosting the \BlueLaTeX service
  base-url = "http://${http.host}:${http.port}/"

  # the base directory where the working data are saved
  data = "/var/lib/blue"

  # the session timeout
  session-timeout = 15 minutes

  paper {

    # the directory where the paper data are saved
    directory = ${blue.data}/papers

    # the directory containing the cls files
    classes = ${blue.data}/classes

  }

  template {

    # the base directory where the templates are located
    directory = ${blue.data}/templates

  }

  # Rest API specific configuration keys
  api {

    # the prefix of this \BlueLaTeX installation
    # if it is installed at the root of the domain, then leave this string empty
    path-prefix = ""

  }

}

mail {

  smtp {

    # the smtp server host name
    host = localhost

    # the smtp server port
    port = 25

  }

  # the address from which users receive emails
  from = "no-reply@bluelatex.gnieh.org"

}

couch {

  # the host name where the couchdb instance runs
  hostname = "localhost"

  # the couchdb server port
  port = 5984

  # should we connect to couchdb via ssl
  ssl = false

  # the timeout when waiting for the server response
  timeout = 20 seconds

  # the couchdb database administrator name
  admin-name = "admin"

  # the couchdb database administrator password
  admin-password = "admin"

  database {

    # the name of the database in which the \BlueLaTeX specific user data are saved
    blue_users = "blue_users"

    # the name of the database in which the papers data are saved
    blue_papers = "blue_papers"

  }

  design {

    # the directory containing the design documents
    dir = ${blue.data}/designs

  }

  # user specific configuration
  user {

    # the default roles assigned to a user when created */
    roles = [ "blue_user" ]

    # the password reset token validity
    token-validity = 1 day

  }

}

